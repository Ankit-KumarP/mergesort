class Solution
{
    // connecting
    void merge(int arr[], int l, int m, int r)
    {
        int a[] = new int[r-l + 1];
        int idx = 0;
        
        int p1 = l, p2 = m+1;
        while(p1 <= m && p2 <= r )
        {
            if(arr[p1] >= arr[p2]) a[idx++] = arr[p2++];
            else
               a[idx++] = arr[p1++];
        }
        while(p1 <= m)
        {
             a[idx++] = arr[p1++];
        }
        while(p2 <= r)
        {
             a[idx++] = arr[p2++];
        }
        
        // copy
        for(int i = 0, j = l;i<a.length;i++,j++){
            arr[j] = a[i];
        }

    }
        
        // dividing
    void mergeSort(int arr[], int l, int r)
    {
       if(l >= r) return;
       int mid = l + (r-l)/2;
       mergeSort(arr,l,mid);
       mergeSort(arr,mid+1,r);
       
       merge(arr,l,mid,r);
       
      
    }
}
